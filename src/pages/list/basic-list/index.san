<template>
    <page-container
        title="标准列表"
    >
        <div class="standard-list">
            <s-card bordered="{{false}}">
                <s-row>
                    <s-col sm="{{8}}" xs="{{24}}">
                        <info title="我的待办" value="8个任务" bordered />
                    </s-col>
                    <s-col sm="{{8}}" xs="{{24}}">
                        <info title="本周任务平均处理时间" value="32分钟" bordered />
                    </s-col>
                    <s-col sm="{{8}}" xs="{{24}}">
                        <info title="本周完成任务数" value="24个任务" />
                    </s-col>
                </s-row>
            </s-card>

            <s-card
                class="list-card"
                bordered="{{false}}"
                title="基本列表"
                style="margin-top: 24px;"
                bodyStyle="padding: '0 32px 40px 32px'"
            >
                <template slot="extra">
                    <extra-content />
                </template>

                <s-button
                    type="dashed"
                    style="width: 100%; margin-bottom: 8px;"
                    on-click="showModal"
                >
                    <s-icon type="plus" />添加
                </s-button>

                <s-list
                    size="large"
                    rowKey="id"
                    loading="{{loading}}"
                    pagination="{{paginationProps}}"
                    dataSource="{{list}}"
                >
                    <s-list-item
                        slot="renderItem"
                        actions="{{['edit', 'more']}}"
                    >
                        <a slot="edit">编辑</a>
                        <more-btn
                            slot="more"
                            data="{{item}}"
                            on-edit-and-delete="editAndDelete"
                        />
                        <s-list-item-meta
                            description="{{item.subDescription}}">
                            <s-avatar src="{{item.avatar}}" slot="avatar" />
                            <a href="#" slot="title">{{item.title}}</a>
                        </s-list-item-meta>
                        <list-content
                            data="{{item}}"
                        ></list-content>
                    </s-list-item>
                </s-list>
            </s-card>
        </div>

        <operation-modal
            on-done="onDone"
            on-submit="onSubmit"
            visible="{{visible}}"
        ></operation-modal>
    </page-container>
</template>

<script>
import san from 'san';
import {connect} from '@/lib/Store';
import {
    Card,
    Avatar,
    Icon,
    Row,
    Col,
    Button,
    Radio,
    Input,
    List,
    Dropdown,
    Menu,
    Progress,
    Modal
} from 'santd';
import moment from 'moment';
import {PageContainer} from '@/components/BasicLayout';
import OperationModal from './components/OperationModal.san';

const Info = san.defineComponent({
    template:
        `<div class="header-info">
            <span>{{title}}</span>
            <p>{{value}}</p>
            <em s-if="{{bordered}}"/>
        </div>`
});

const extraContent = san.defineComponent({
    template: `
        <div class="extra-content">
            <radio-group defaultValue="all">
                <radio-button value="all">全部</radio-button>
                <radio-button value="progress">进行中</radio-button>
                <radio-button value="waiting">等待中</radio-button>
            </radio-group>
            <search class="extra-content-search" placeholder="请输入" />
        </div>`,
    components: {
        'radio-group':  Radio.Group,
        'radio-button':  Radio.Button,
        'search': Input.Search
    }
});

const MoreBtn = san.defineComponent({
    template: `
        <s-dropdown>
            <s-menu slot="overlay" on-click="editAndDelete($event, data)">
                <s-menu-item key="edit">编辑</s-menu-item>
                <s-menu-item key="delete">删除</s-menu-item>
            </s-menu>
            <a href="javascript:;">更多 <s-icon type="down" /></a>
        </s-dropdown>`,

    components: {
        's-dropdown': Dropdown,
        's-icon': Icon,
        's-menu': Menu,
        's-menu-item': Menu.Item
    },

    editAndDelete({key}, currentItem) {
        this.fire('edit-and-delete', {key, currentItem});
    }
});

const ListContent = san.defineComponent({
    template: `
        <div class="list-content">
            <div class="list-content-item">
                <span>Owner</span>
                <p>{{data.owner}}</p>
            </div>
            <div class="list-content-item">
                <span>开始时间</span>
                <p>{{formateTime(data.createdAt)}}</p>
            </div>
            <div class="list-content-item">
                <s-progress
                    style="width: 132px;"
                    percent="{{data.percent}}"
                    status="{{data.status}}"
                />
            </div>
        </div>
        `,
    components: {
        's-dropdown': Dropdown,
        's-icon': Icon,
        's-menu': Menu,
        's-menu-item': Menu.Item,
        's-progress': Progress
    },

    formateTime(time) {
        return moment(time).format('YYYY-MM-DD HH:mm');
    }

});

const paginationProps = {
    showSizeChanger: true,
    showQuickJumper: true,
    pageSize: 5,
    total: 50,
};

const BasicList = {
    components: {
        's-card': Card,
        's-avatar': Avatar,
        's-row': Row,
        's-col': Col,
        's-icon': Icon,
        's-button': Button,
        'page-container': PageContainer,
        'info': Info,
        'extra-content': extraContent,
        's-list': List,
        's-list-item': List.Item,
        's-list-item-meta': List.Item.Meta,
        'more-btn': MoreBtn,
        'list-content': ListContent,
        'operation-modal': OperationModal
    },

    initData() {
        return {
            list2: [],
            paginationProps,
            visible: false
        };
    },

    async created() {
        this.actions.fetchList({count: 5});
    },

    async onSubmit(val) {
        this.data.set('visible', false);
        this.actions.submit(val);
    },

    onDone() {
        this.data.set('visible', false);
    },

    showModal() {
        this.data.set('visible', true);
    },
    editAndDelete({key, currentItem}) {
        if (key === 'edit') {
            this.data.set('visible', true);
            return;
        }
        Modal.confirm({
            title: '删除任务',
            content: '确定删除该任务吗？',
            okText: '确认',
            cancelText: '取消',
            onOk: () => this.deleteItem(currentItem.id),
        });
    },
    deleteItem(id) {
        this.actions.submit({id});
    }
};

export default BasicList;

connect.san(
    {
        list: 'basic-list.list'
    },
    {
        fetchList: 'basic-list:fetchList',
        submit: 'basic-list:submit',
    }
)(BasicList);
</script>

</script>

<style src="./style.less"></style>
